version: '3'
services:
      webservice_name:
            container_name: website.container.name
            build:
                  context: .
                  dockerfile: Dockerfile
            restart: unless-stopped
            depends_on:
                  - databaseservice_name
            networks:
                  expose-network:
                  pgsql-network:
            volumes:
                  - /PATH/TO/VOLUME:/var/www/html
            labels:
                  #Redirect to https (don t include in other services)
                  - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
                  - "traefik.enable=true"
                  # Set host
                  - "traefik.http.routers.webservice_name.rule=Host(`your.url.url`)"
                  # Set service
                  - "traefik.http.services.webservice_name.loadbalancer.server.port=80"
                  - "traefik.http.routers.webservice_name.tls.certresolver=le"
                  # Set to the secure endpoint
                  - "traefik.http.routers.webservice_name.entrypoints=secure"
                  # Redirect
                  - "traefik.http.routers.webservice_name-redir.rule=Host(`your.url.url`)"
                  - "traefik.http.routers.webservice_name-redir.entrypoints=insecure"
                  - "traefik.http.routers.webservice_name-redir.middlewares=redirect-to-https"
      databaseservice_name:
            container_name: database_server.container.name
            image: postgres:latest
            networks:
                  pgsql-network:
            volumes:
                  - /PATH/TO/VOLUME:/var/lib/pgsql
            restart: always
            environment:
                  POSTGRES_DB: database.name
                  POSTGRES_USER: user.name
                  POSTGRES_PASSWORD: user.password
            ports:
                  - '3306:3306'
networks:
  expose-network:
    external:
      name: expose-network
  pgsql-network:
    driver: bridge
